{"id":"node_modules\\core-js\\internals\\to-integer.js","dependencies":[{"name":"E:\\java script course\\complete-javascript-course-master\\18-forkify\\starter\\node_modules\\core-js\\package.json","includedInParent":true,"mtime":1614936599524},{"name":"E:\\java script course\\complete-javascript-course-master\\18-forkify\\starter\\package.json","includedInParent":true,"mtime":1616658594199}],"generated":{"js":"var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n","map":{"mappings":[{"source":"node_modules\\core-js\\internals\\to-integer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules\\core-js\\internals\\to-integer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules\\core-js\\internals\\to-integer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules\\core-js\\internals\\to-integer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules\\core-js\\internals\\to-integer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules\\core-js\\internals\\to-integer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules\\core-js\\internals\\to-integer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules\\core-js\\internals\\to-integer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules\\core-js\\internals\\to-integer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}}],"sources":{"node_modules\\core-js\\internals\\to-integer.js":"var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `ToInteger` abstract operation\n// https://tc39.es/ecma262/#sec-tointeger\nmodule.exports = function (argument) {\n  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);\n};\n"},"lineCount":9}},"hash":"f7f1487ee6931d513195a33a3831d7fa","cacheData":{"env":{}}}